//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AppsWebAPI.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Android_DataBaseEntities : DbContext
    {
        public Android_DataBaseEntities()
            : base("name=Android_DataBaseEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int MQ_CHEQUEO_INSERT(string sistema_Electrico, string cilindros, string bombaHD, string rodaje_Cadena, string cuchilla, string llantas, string mangueras, string sillones, string vidrios, string motor, string otros, Nullable<int> codigo_Maquina, Nullable<int> codigo_Supervisor)
        {
            var sistema_ElectricoParameter = sistema_Electrico != null ?
                new ObjectParameter("Sistema_Electrico", sistema_Electrico) :
                new ObjectParameter("Sistema_Electrico", typeof(string));
    
            var cilindrosParameter = cilindros != null ?
                new ObjectParameter("Cilindros", cilindros) :
                new ObjectParameter("Cilindros", typeof(string));
    
            var bombaHDParameter = bombaHD != null ?
                new ObjectParameter("BombaHD", bombaHD) :
                new ObjectParameter("BombaHD", typeof(string));
    
            var rodaje_CadenaParameter = rodaje_Cadena != null ?
                new ObjectParameter("Rodaje_Cadena", rodaje_Cadena) :
                new ObjectParameter("Rodaje_Cadena", typeof(string));
    
            var cuchillaParameter = cuchilla != null ?
                new ObjectParameter("Cuchilla", cuchilla) :
                new ObjectParameter("Cuchilla", typeof(string));
    
            var llantasParameter = llantas != null ?
                new ObjectParameter("Llantas", llantas) :
                new ObjectParameter("Llantas", typeof(string));
    
            var manguerasParameter = mangueras != null ?
                new ObjectParameter("Mangueras", mangueras) :
                new ObjectParameter("Mangueras", typeof(string));
    
            var sillonesParameter = sillones != null ?
                new ObjectParameter("Sillones", sillones) :
                new ObjectParameter("Sillones", typeof(string));
    
            var vidriosParameter = vidrios != null ?
                new ObjectParameter("Vidrios", vidrios) :
                new ObjectParameter("Vidrios", typeof(string));
    
            var motorParameter = motor != null ?
                new ObjectParameter("Motor", motor) :
                new ObjectParameter("Motor", typeof(string));
    
            var otrosParameter = otros != null ?
                new ObjectParameter("Otros", otros) :
                new ObjectParameter("Otros", typeof(string));
    
            var codigo_MaquinaParameter = codigo_Maquina.HasValue ?
                new ObjectParameter("Codigo_Maquina", codigo_Maquina) :
                new ObjectParameter("Codigo_Maquina", typeof(int));
    
            var codigo_SupervisorParameter = codigo_Supervisor.HasValue ?
                new ObjectParameter("Codigo_Supervisor", codigo_Supervisor) :
                new ObjectParameter("Codigo_Supervisor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MQ_CHEQUEO_INSERT", sistema_ElectricoParameter, cilindrosParameter, bombaHDParameter, rodaje_CadenaParameter, cuchillaParameter, llantasParameter, manguerasParameter, sillonesParameter, vidriosParameter, motorParameter, otrosParameter, codigo_MaquinaParameter, codigo_SupervisorParameter);
        }
    
        public virtual ObjectResult<MQ_CHEQUEO_LISTA_Result> MQ_CHEQUEO_LISTA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MQ_CHEQUEO_LISTA_Result>("MQ_CHEQUEO_LISTA");
        }
    
        public virtual int MQ_CHEQUEO_UPDATE(string sistema_Electrico, string cilindros, string bombaHD, string rodaje_Cadena, string cuchilla, string llantas, string mangueras, string sillones, string vidrios, string motor, string otros, Nullable<int> codigo_Maquina, Nullable<int> codigo_Supervisor, Nullable<int> iD)
        {
            var sistema_ElectricoParameter = sistema_Electrico != null ?
                new ObjectParameter("Sistema_Electrico", sistema_Electrico) :
                new ObjectParameter("Sistema_Electrico", typeof(string));
    
            var cilindrosParameter = cilindros != null ?
                new ObjectParameter("Cilindros", cilindros) :
                new ObjectParameter("Cilindros", typeof(string));
    
            var bombaHDParameter = bombaHD != null ?
                new ObjectParameter("BombaHD", bombaHD) :
                new ObjectParameter("BombaHD", typeof(string));
    
            var rodaje_CadenaParameter = rodaje_Cadena != null ?
                new ObjectParameter("Rodaje_Cadena", rodaje_Cadena) :
                new ObjectParameter("Rodaje_Cadena", typeof(string));
    
            var cuchillaParameter = cuchilla != null ?
                new ObjectParameter("Cuchilla", cuchilla) :
                new ObjectParameter("Cuchilla", typeof(string));
    
            var llantasParameter = llantas != null ?
                new ObjectParameter("Llantas", llantas) :
                new ObjectParameter("Llantas", typeof(string));
    
            var manguerasParameter = mangueras != null ?
                new ObjectParameter("Mangueras", mangueras) :
                new ObjectParameter("Mangueras", typeof(string));
    
            var sillonesParameter = sillones != null ?
                new ObjectParameter("Sillones", sillones) :
                new ObjectParameter("Sillones", typeof(string));
    
            var vidriosParameter = vidrios != null ?
                new ObjectParameter("Vidrios", vidrios) :
                new ObjectParameter("Vidrios", typeof(string));
    
            var motorParameter = motor != null ?
                new ObjectParameter("Motor", motor) :
                new ObjectParameter("Motor", typeof(string));
    
            var otrosParameter = otros != null ?
                new ObjectParameter("Otros", otros) :
                new ObjectParameter("Otros", typeof(string));
    
            var codigo_MaquinaParameter = codigo_Maquina.HasValue ?
                new ObjectParameter("Codigo_Maquina", codigo_Maquina) :
                new ObjectParameter("Codigo_Maquina", typeof(int));
    
            var codigo_SupervisorParameter = codigo_Supervisor.HasValue ?
                new ObjectParameter("Codigo_Supervisor", codigo_Supervisor) :
                new ObjectParameter("Codigo_Supervisor", typeof(int));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MQ_CHEQUEO_UPDATE", sistema_ElectricoParameter, cilindrosParameter, bombaHDParameter, rodaje_CadenaParameter, cuchillaParameter, llantasParameter, manguerasParameter, sillonesParameter, vidriosParameter, motorParameter, otrosParameter, codigo_MaquinaParameter, codigo_SupervisorParameter, iDParameter);
        }
    
        public virtual int MQ_MAQUINAS_INSERT(string descripcion, Nullable<int> tipo, string periodo_Mantenimiento, string placa, string estado, string marca, string modelo, string centroCosto, string serie, string noChasis, string motor, string vin, string color, string codigoAF)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            var tipoParameter = tipo.HasValue ?
                new ObjectParameter("tipo", tipo) :
                new ObjectParameter("tipo", typeof(int));
    
            var periodo_MantenimientoParameter = periodo_Mantenimiento != null ?
                new ObjectParameter("Periodo_Mantenimiento", periodo_Mantenimiento) :
                new ObjectParameter("Periodo_Mantenimiento", typeof(string));
    
            var placaParameter = placa != null ?
                new ObjectParameter("Placa", placa) :
                new ObjectParameter("Placa", typeof(string));
    
            var estadoParameter = estado != null ?
                new ObjectParameter("Estado", estado) :
                new ObjectParameter("Estado", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            var modeloParameter = modelo != null ?
                new ObjectParameter("Modelo", modelo) :
                new ObjectParameter("Modelo", typeof(string));
    
            var centroCostoParameter = centroCosto != null ?
                new ObjectParameter("CentroCosto", centroCosto) :
                new ObjectParameter("CentroCosto", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var noChasisParameter = noChasis != null ?
                new ObjectParameter("NoChasis", noChasis) :
                new ObjectParameter("NoChasis", typeof(string));
    
            var motorParameter = motor != null ?
                new ObjectParameter("Motor", motor) :
                new ObjectParameter("Motor", typeof(string));
    
            var vinParameter = vin != null ?
                new ObjectParameter("Vin", vin) :
                new ObjectParameter("Vin", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var codigoAFParameter = codigoAF != null ?
                new ObjectParameter("codigoAF", codigoAF) :
                new ObjectParameter("codigoAF", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MQ_MAQUINAS_INSERT", descripcionParameter, tipoParameter, periodo_MantenimientoParameter, placaParameter, estadoParameter, marcaParameter, modeloParameter, centroCostoParameter, serieParameter, noChasisParameter, motorParameter, vinParameter, colorParameter, codigoAFParameter);
        }
    
        public virtual ObjectResult<MQ_MAQUINAS_LISTA_Result> MQ_MAQUINAS_LISTA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MQ_MAQUINAS_LISTA_Result>("MQ_MAQUINAS_LISTA");
        }
    
        public virtual ObjectResult<MQ_MAQUINAS_LISTA_APP_Result> MQ_MAQUINAS_LISTA_APP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MQ_MAQUINAS_LISTA_APP_Result>("MQ_MAQUINAS_LISTA_APP");
        }
    
        public virtual int MQ_REPARACION_INSERT(Nullable<System.DateTime> fecha_Paralizacion, Nullable<System.DateTime> fecha_Inicio, string estado_Reparacion, Nullable<System.DateTime> fecha_Fin, Nullable<int> dias_Asignados, Nullable<int> codigo_Maquina, string diagnostico)
        {
            var fecha_ParalizacionParameter = fecha_Paralizacion.HasValue ?
                new ObjectParameter("Fecha_Paralizacion", fecha_Paralizacion) :
                new ObjectParameter("Fecha_Paralizacion", typeof(System.DateTime));
    
            var fecha_InicioParameter = fecha_Inicio.HasValue ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(System.DateTime));
    
            var estado_ReparacionParameter = estado_Reparacion != null ?
                new ObjectParameter("Estado_Reparacion", estado_Reparacion) :
                new ObjectParameter("Estado_Reparacion", typeof(string));
    
            var fecha_FinParameter = fecha_Fin.HasValue ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(System.DateTime));
    
            var dias_AsignadosParameter = dias_Asignados.HasValue ?
                new ObjectParameter("Dias_Asignados", dias_Asignados) :
                new ObjectParameter("Dias_Asignados", typeof(int));
    
            var codigo_MaquinaParameter = codigo_Maquina.HasValue ?
                new ObjectParameter("Codigo_Maquina", codigo_Maquina) :
                new ObjectParameter("Codigo_Maquina", typeof(int));
    
            var diagnosticoParameter = diagnostico != null ?
                new ObjectParameter("Diagnostico", diagnostico) :
                new ObjectParameter("Diagnostico", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MQ_REPARACION_INSERT", fecha_ParalizacionParameter, fecha_InicioParameter, estado_ReparacionParameter, fecha_FinParameter, dias_AsignadosParameter, codigo_MaquinaParameter, diagnosticoParameter);
        }
    
        public virtual ObjectResult<MQ_REPARACION_LISTA_Result> MQ_REPARACION_LISTA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MQ_REPARACION_LISTA_Result>("MQ_REPARACION_LISTA");
        }
    
        public virtual int MQ_REPARACION_UPDATE(Nullable<System.DateTime> fecha_Paralizacion, Nullable<System.DateTime> fecha_Inicio, string estado_Reparacion, Nullable<System.DateTime> fecha_Fin, Nullable<int> dias_Asignados, Nullable<int> codigo_Maquina, string diagnostico, Nullable<int> iD)
        {
            var fecha_ParalizacionParameter = fecha_Paralizacion.HasValue ?
                new ObjectParameter("Fecha_Paralizacion", fecha_Paralizacion) :
                new ObjectParameter("Fecha_Paralizacion", typeof(System.DateTime));
    
            var fecha_InicioParameter = fecha_Inicio.HasValue ?
                new ObjectParameter("Fecha_Inicio", fecha_Inicio) :
                new ObjectParameter("Fecha_Inicio", typeof(System.DateTime));
    
            var estado_ReparacionParameter = estado_Reparacion != null ?
                new ObjectParameter("Estado_Reparacion", estado_Reparacion) :
                new ObjectParameter("Estado_Reparacion", typeof(string));
    
            var fecha_FinParameter = fecha_Fin.HasValue ?
                new ObjectParameter("Fecha_Fin", fecha_Fin) :
                new ObjectParameter("Fecha_Fin", typeof(System.DateTime));
    
            var dias_AsignadosParameter = dias_Asignados.HasValue ?
                new ObjectParameter("Dias_Asignados", dias_Asignados) :
                new ObjectParameter("Dias_Asignados", typeof(int));
    
            var codigo_MaquinaParameter = codigo_Maquina.HasValue ?
                new ObjectParameter("Codigo_Maquina", codigo_Maquina) :
                new ObjectParameter("Codigo_Maquina", typeof(int));
    
            var diagnosticoParameter = diagnostico != null ?
                new ObjectParameter("Diagnostico", diagnostico) :
                new ObjectParameter("Diagnostico", typeof(string));
    
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MQ_REPARACION_UPDATE", fecha_ParalizacionParameter, fecha_InicioParameter, estado_ReparacionParameter, fecha_FinParameter, dias_AsignadosParameter, codigo_MaquinaParameter, diagnosticoParameter, iDParameter);
        }
    
        public virtual ObjectResult<MQ_MAQUINAS_TIPO_LISTA_Result> MQ_MAQUINAS_TIPO_LISTA()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MQ_MAQUINAS_TIPO_LISTA_Result>("MQ_MAQUINAS_TIPO_LISTA");
        }
    
        public virtual ObjectResult<MQ_MAQUINAS_LISTADO_TIPO_Result> MQ_MAQUINAS_LISTADO_TIPO()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MQ_MAQUINAS_LISTADO_TIPO_Result>("MQ_MAQUINAS_LISTADO_TIPO");
        }
    
        public virtual ObjectResult<MQ_LOGIN_SUPERVISOR_Result> MQ_LOGIN_SUPERVISOR(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MQ_LOGIN_SUPERVISOR_Result>("MQ_LOGIN_SUPERVISOR", usernameParameter, passwordParameter);
        }
    }
}
